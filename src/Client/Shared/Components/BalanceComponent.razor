@if ((AuthenticationState as SteamAuthenticationStateProvider).State.User.Identity.IsAuthenticated)
{
    @if (BalanceService.Balance == null)
    {
        <div data-toggle="tooltip" data-placement="bottom" title="@BalanceService.BalanceMessage">
            <div class="spinner-border text-primary" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>        
    }
    else
    {
        <b>Balance: </b>
        <a class="font-weight-bold" @onclick="BalanceService.UpdateBalanceAsync">
            @BalanceService.Balance
        </a>
    }
}

@code {
    [Inject]
    private BalanceService BalanceService { get; set; }
    [Inject]
    public AuthenticationStateProvider AuthenticationState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if ((AuthenticationState as SteamAuthenticationStateProvider).State.User.Identity.IsAuthenticated)
            await BalanceService.UpdateBalanceAsync();
    }
}
