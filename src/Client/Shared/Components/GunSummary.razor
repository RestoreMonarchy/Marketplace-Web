<h3>Gun State</h3>
<ul class="list-unstyled">
    <li><b>Sight:</b> @(Sight != null ? Sight.ItemName : "none")</li>
    <li><b>Tactical:</b> @(Tactical != null ? Tactical.ItemName : "none")</li>
    <li><b>Grip:</b> @(Grip != null ? Grip.ItemName : "none")</li>
    <li><b>Barrel:</b> @(Barrel != null ? Barrel.ItemName : "none")</li>
    <li><b>Magazine:</b> @Ammo/@(Magazine != null ? Magazine.Amount : 0)</li>
</ul>


@code {



    [Parameter]
    public int GunId { get; set; }

    [Parameter]
    public byte[] Metadata { get; set; }

    [Inject]
    public HttpClient UnturnedItemsClient { get; set; }

    public UnturnedItem Sight { get; set; }
    public UnturnedItem Tactical { get; set; }
    public UnturnedItem Grip { get; set; }
    public UnturnedItem Barrel { get; set; }
    public UnturnedItem Magazine { get; set; }

    public byte Ammo { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Sight = null;
        Tactical = null;
        Grip = null;
        Barrel = null;
        Magazine = null;
        Ammo = 0;

        ushort sightId = BitConverterExtras.Get<ushort>(Metadata, 0);
        ushort tacticalId = BitConverterExtras.Get<ushort>(Metadata, 1);
        ushort gripId = BitConverterExtras.Get<ushort>(Metadata, 2);
        ushort barrelId = BitConverterExtras.Get<ushort>(Metadata, 3);
        ushort magazineId = BitConverterExtras.Get<ushort>(Metadata, 4);
        Ammo = Metadata[10];

        if (sightId != 0)
            Sight = await UnturnedItemsClient.GetUnturnedItemAsync(sightId);
        if (tacticalId != 0)
            Tactical = await UnturnedItemsClient.GetUnturnedItemAsync(tacticalId);
        if (gripId != 0)
            Grip = await UnturnedItemsClient.GetUnturnedItemAsync(gripId);
        if (barrelId != 0)
            Barrel = await UnturnedItemsClient.GetUnturnedItemAsync(barrelId);
        if (magazineId != 0)
            Magazine = await UnturnedItemsClient.GetUnturnedItemAsync(magazineId);
    }
}
